from imports import *

async def go_to_home(callback: CallbackQuery) -> None:
    bilder = InlineKeyboardBuilder()
    bilder.row(InlineKeyboardButton(text="–°–±–æ—Ä–Ω–∏–∫–∏ üìï", callback_data="go_to_storage"))
    bilder.row(InlineKeyboardButton(text="–ü—Ä–æ—Ñ–∏–ª—å üïµÔ∏è‚Äç", callback_data="go_to_profile"))
    bilder.row(InlineKeyboardButton(text="–ú–∞—Ä–∫–µ—Ç üè™", callback_data="go_to_market"))

    await callback.bot.send_photo(callback.message.chat.id, photo=FSInputFile("assets/photos/hello.png"),
                         caption=f"–ü—Ä–∏–≤–µ—Ç, <b>{callback.from_user.full_name}</b>",
                         reply_markup=bilder.as_markup())
    await callback.answer()


async def go_to_storage(callback=None):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="–°–±–æ—Ä–Ω–∏–∫ —Ñ–∞–∫—Ç–æ–≤", callback_data="go_to_facts"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_to_home"))
    await callback.message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ –°–±–æ—Ä–Ω–∏–∫, –∑–¥–µ—Å—å <b>–í—ã</b> –º–æ–∂–µ—Ç–µ –ø–æ–¥–æ–±—Ä–∞—Ç—å –¥–ª—è —Å–µ–±—è –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ –º–µ—Å—Ç–∞ –∏–ª–∏ —É–∑–Ω–∞—Ç—å –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã–µ —Ñ–∞–∫—Ç—ã", reply_markup=builder.as_markup())
    await callback.answer()


async def go_to_profile(callback=None):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_to_home"))
    user = CUR.execute(f"SELECT * FROM users WHERE telegram_id={callback.from_user.id}").fetchall()
    if len(user) == 0:
        CUR.execute(f"INSERT INTO users(telegram_id) VALUES({callback.from_user.id})")
        CON.commit()
    user = CUR.execute(f"SELECT * FROM users WHERE telegram_id={callback.from_user.id}").fetchall()[0]
    await callback.message.answer(f"{callback.from_user.full_name} \n –í–∞—à –±–∞–ª–∞–Ω—Å: {user[2]}", reply_markup=builder.as_markup())
    await callback.answer()


async def go_to_market(callback: CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_to_home"))
    await callback.message.answer("–í—ã –≤ –º–∞—Ä–∫–µ—Ç–µ",  reply_markup=builder.as_markup())
    await  callback.answer()


async def go_to_facts(callback: CallbackQuery):
    builder = InlineKeyboardBuilder()
    builder.row(InlineKeyboardButton(text="üé≤ –°–ª—É—á–∞–π–Ω—ã–π —Ñ–∞–∫—Ç", callback_data="go_to_random_fact"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_to_storage"))
    await callback.message.answer("–î–æ–±—Ä–æ –ø–æ–∂–∞–ª–æ–≤–∞—Ç—å –≤ <b>—Å–±–æ—Ä–Ω–∏–∫ —Ñ–∞–∫—Ç–æ–≤</b>, —Å–¥–µ—Å—å –≤—ã –º–æ–∂–µ—Ç–µ —É–∑–Ω–∞—Ç—å –º–Ω–æ–≥–æ –∏–Ω—Ç–µ—Ä–µ—Å–Ω—ã—Ö –∏ –∑–∞–±–∞–≤–Ω—ã—Ö —Ñ–∞–∫—Ç–æ–≤ –æ –í–æ—Ä–æ–Ω–µ–∂—Å–∫–æ–π –æ–±–ª–∞—Å—Ç–∏", reply_markup=builder.as_markup())
    await callback.answer()


async def go_to_random_fact(callback: CallbackQuery):
    builder = InlineKeyboardBuilder()
    facts = CUR.execute("SELECT * FROM facts").fetchall()
    fact = random.choice(facts)
    print(random.choice(facts))
    builder.row(InlineKeyboardButton(text="üé≤ –ü–æ–ø—Ä–æ–±—ã–≤–∞—Ç—å –ï—â—ë...", callback_data="go_to_random_fact"))
    builder.row(InlineKeyboardButton(text="‚¨ÖÔ∏è –ù–∞–∑–∞–¥", callback_data="go_to_facts"))
    await callback.bot.send_photo(callback.message.chat.id, photo=FSInputFile(f"assets/photos/facts_photos/{fact[3]}"), caption=f"<b>{fact[1]}</b>\n{fact[2]}", reply_markup=builder.as_markup())
    await callback.answer()

functions = {
    "go_to_home":go_to_home,
    "go_to_storage":go_to_storage,
    "go_to_profile":go_to_profile,
    "go_to_market":go_to_market,
    "go_to_facts":go_to_facts,
    "go_to_random_fact":go_to_random_fact
}
